
public class Rectangle { // Rectangle 클래스
	
	int x, y, width, height; //x,y,width,height를 int형으로 선언
	
	public Rectangle(int x, int y, int width, int height) // x,y,width,height를 초기화하는 메소드
	{
		this.x = x; // 메소드에 속한 x 정의
		this.y = y; // 메소드에 속한 y 정의
		this.width = width; //메소드에 속한 width 정의
		this.height = height; // 메소드에 속한 height 정의
	}
	public int square() // 사각형의 넓이를 리턴하는 메소드
	{
		return width*height; // 폭과 높이의 곱을 리턴
	}
	public void show() // 사각형의 좌표와 넓이를 화면에 출력하는메소드
	{
		System.out.println("("+x+","+y+ ")"+"에서 크기가 "+width+"x"+height+"인 사각형"); // 사각형의 좌표와 넓이를 출력
	}
	public boolean contains(Rectangle r) // r이 사각형내에 있다면 true로 리턴하는메소드
	{
		if(r.x > x && r.y > y) // r의 x,y좌표가 입력받은 x,y좌표보다 크다면
		{
			if(r.x + r.width < x + width && r.y + r.height < y + height) // r의 폭과 높이가 입력받은 크기보다 작다면
			{
					return true; // true로 리턴
			}
		}
		return false; // 그렇지않다면 false로 리턴
	}
	
	public static void main(String[] args) // 메인메소드
	{
		Rectangle r = new Rectangle(2, 2, 8, 7); // r은 2,2에 8*7의 사각형
		Rectangle s = new Rectangle(5, 5, 6, 6); // s는 5,5에 6*6의 사각형
		Rectangle t = new Rectangle(1, 1, 10, 10); // t는 1,1에 10*10의 사각형
		
		r.show(); // show메소드로 r을 출력
		System.out.println("s의 면적은 " +s.square()); // square메소드로 s 출력
		if(t.contains(r)) {System.out.println("t는 r을 포함합니다.");} // t가 r을 포함하면 출력하는 메시지
		if(t.contains(s)) {System.out.println("t는 s를 포함합니다.");} // t가 s를 포함하면 출력하는 메시지
	}
}
